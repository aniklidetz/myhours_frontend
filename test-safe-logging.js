#!/usr/bin/env node

/**
 * –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç-—Ä–∞–Ω–Ω–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Ç–∏–ª–∏—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
 * –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–µ–∑ Jest –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
 */

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —É—Ç–∏–ª–∏—Ç—ã
const {
  maskEmail,
  maskPhone,
  maskCoordinates,
  maskName,
  hashUserId,
  safeLogUser,
  safeLogEmployee,
  safeLogLocation,
  safeLogBiometric
} = require('./src/utils/safeLogging');

console.log('üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è React Native...');
console.log('=' * 60);

// –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
function test(description, testFn) {
  try {
    testFn();
    console.log(`‚úÖ ${description}`);
  } catch (error) {
    console.log(`‚ùå ${description}`);
    console.log(`   –û—à–∏–±–∫–∞: ${error.message}`);
  }
}

function assertEqual(actual, expected, message) {
  if (actual !== expected) {
    throw new Error(`${message}: –æ–∂–∏–¥–∞–ª–∏ '${expected}', –ø–æ–ª—É—á–∏–ª–∏ '${actual}'`);
  }
}

// –¢–µ—Å—Ç—ã –º–∞—Å–∫–∏—Ä–æ–≤–∞–Ω–∏—è email
console.log('\nüìß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Å–∫–∏—Ä–æ–≤–∞–Ω–∏—è email:');
test('–û–±—ã—á–Ω—ã–π email', () => {
  assertEqual(maskEmail('admin@example.com'), 'a***@example.com', 'Email –Ω–µ –∑–∞–º–∞—Å–∫–∏—Ä–æ–≤–∞–Ω');
});

test('–ö–æ—Ä–æ—Ç–∫–∏–π email', () => {
  assertEqual(maskEmail('a@test.com'), '*@test.com', '–ö–æ—Ä–æ—Ç–∫–∏–π email –Ω–µ –∑–∞–º–∞—Å–∫–∏—Ä–æ–≤–∞–Ω');
});

test('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email', () => {
  assertEqual(maskEmail('invalid'), '[invalid_email]', '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω');
});

// –¢–µ—Å—Ç—ã –º–∞—Å–∫–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤
console.log('\nüìû –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Å–∫–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤:');
test('–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π –Ω–æ–º–µ—Ä', () => {
  assertEqual(maskPhone('+972501234567'), '***4567', '–¢–µ–ª–µ—Ñ–æ–Ω –Ω–µ –∑–∞–º–∞—Å–∫–∏—Ä–æ–≤–∞–Ω');
});

test('–ù–æ–º–µ—Ä —Å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è–º–∏', () => {
  assertEqual(maskPhone('+1-234-567-8901'), '***8901', '–ù–æ–º–µ—Ä —Å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è–º–∏ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω');
});

// –¢–µ—Å—Ç—ã –º–∞—Å–∫–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
console.log('\nüìç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Å–∫–∏—Ä–æ–≤–∞–Ω–∏—è GPS –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç:');
test('–û—Ñ–∏—Å–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã', () => {
  assertEqual(maskCoordinates(32.05, 34.78), 'Office Area', '–û—Ñ–∏—Å–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã');
});

test('–£–¥–∞–ª—ë–Ω–Ω–∞—è –ª–æ–∫–∞—Ü–∏—è', () => {
  assertEqual(maskCoordinates(40.7, -74.0), 'Remote Location', '–£–¥–∞–ª—ë–Ω–Ω–∞—è –ª–æ–∫–∞—Ü–∏—è –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞');
});

// –¢–µ—Å—Ç—ã –º–∞—Å–∫–∏—Ä–æ–≤–∞–Ω–∏—è –∏–º—ë–Ω
console.log('\nüë§ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Å–∫–∏—Ä–æ–≤–∞–Ω–∏—è –∏–º—ë–Ω:');
test('–ü–æ–ª–Ω–æ–µ –∏–º—è', () => {
  assertEqual(maskName('John Doe'), 'J.D.', '–ü–æ–ª–Ω–æ–µ –∏–º—è –Ω–µ –∑–∞–º–∞—Å–∫–∏—Ä–æ–≤–∞–Ω–æ');
});

test('–û–¥–∏–Ω–æ—á–Ω–æ–µ –∏–º—è', () => {
  assertEqual(maskName('Admin'), 'A.', '–û–¥–∏–Ω–æ—á–Ω–æ–µ –∏–º—è –Ω–µ –∑–∞–º–∞—Å–∫–∏—Ä–æ–≤–∞–Ω–æ');
});

// –¢–µ—Å—Ç—ã —Ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è ID
console.log('\nüîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è ID:');
test('–•—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å–ª–æ–≤–æ–≥–æ ID', () => {
  const hash = hashUserId(123);
  if (!hash.startsWith('usr_') || hash.length !== 12) {
    throw new Error('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ö—ç—à–∞');
  }
});

test('–ü–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–æ —Ö—ç—à–µ–π', () => {
  const hash1 = hashUserId(456);
  const hash2 = hashUserId(456);
  assertEqual(hash1, hash2, '–•—ç—à–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏ –¥–ª—è –æ–¥–Ω–æ–≥–æ ID');
});

// –¢–µ—Å—Ç—ã —Å–ª–æ–∂–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
console.log('\nüß© –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ª–æ–∂–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤:');
test('–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', () => {
  const user = {
    id: 123,
    email: 'test@example.com',
    first_name: 'Test',
    last_name: 'User',
    role: 'admin'
  };
  
  const result = safeLogUser(user, 'test');
  
  if (result.email_masked !== 't***@example.com') {
    throw new Error('Email –Ω–µ –∑–∞–º–∞—Å–∫–∏—Ä–æ–≤–∞–Ω –≤ –æ–±—ä–µ–∫—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
  }
  
  if (result.name_initials !== 'T.U.') {
    throw new Error('–ò–º—è –Ω–µ –∑–∞–º–∞—Å–∫–∏—Ä–æ–≤–∞–Ω–æ –≤ –æ–±—ä–µ–∫—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
  }
  
  if (result.email || result.first_name || result.last_name) {
    throw new Error('–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ');
  }
});

test('–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∏–æ–º–µ—Ç—Ä–∏–∏', () => {
  const biometricData = {
    hasImage: true,
    confidence: 0.95,
    sessionId: 'secret_session',
    base64Data: 'very_long_secret_data'
  };
  
  const result = safeLogBiometric(biometricData);
  
  if (result.base64Data || result.sessionId) {
    throw new Error('–°–µ–∫—Ä–µ—Ç–Ω—ã–µ –±–∏–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ');
  }
  
  if (result.confidence_level !== 'high') {
    throw new Error('–£—Ä–æ–≤–µ–Ω—å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
  }
});

// –¢–µ—Å—Ç—ã –∑–∞—â–∏—Ç—ã –æ—Ç —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
console.log('\nüõ°Ô∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞—â–∏—Ç—ã –æ—Ç —Ä–µ–∞–ª—å–Ω—ã—Ö —É—Ç–µ—á–µ–∫:');
test('–ó–∞—â–∏—Ç–∞ –æ—Ç —É—Ç–µ—á–∫–∏ mikhail.plotnik@gmail.com', () => {
  const userData = {
    email: 'mikhail.plotnik@gmail.com',
    first_name: 'Mikhail',
    last_name: 'Plotnik'
  };
  
  const result = safeLogUser(userData, 'biometric_check');
  const serialized = JSON.stringify(result);
  
  if (serialized.includes('mikhail.plotnik@gmail.com')) {
    throw new Error('Email —É—Ç—ë–∫ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–∏');
  }
  
  if (serialized.includes('Mikhail') || serialized.includes('Plotnik')) {
    throw new Error('–ü–æ–ª–Ω—ã–µ –∏–º–µ–Ω–∞ —É—Ç–µ–∫–ª–∏ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–∏');
  }
});

test('–ó–∞—â–∏—Ç–∞ –æ—Ç —É—Ç–µ—á–∫–∏ —Ç–æ—á–Ω—ã—Ö GPS –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç', () => {
  const lat = 32.050936;
  const lng = 34.781800;
  
  const result = safeLogLocation(lat, lng);
  
  if (result.includes('32.050936') || result.includes('34.781800')) {
    throw new Error('–¢–æ—á–Ω—ã–µ GPS –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —É—Ç–µ–∫–ª–∏ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–∏');
  }
  
  if (result !== 'Office Area') {
    throw new Error('GPS –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±–æ–±—â–µ–Ω—ã');
  }
});

console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!');
console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:');
console.log('‚úÖ Email –º–∞—Å–∫–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç');
console.log('‚úÖ GPS –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∑–∞—â–∏—â–µ–Ω—ã');
console.log('‚úÖ –ò–º–µ–Ω–∞ –º–∞—Å–∫–∏—Ä–æ–≤–∞–Ω—ã');
console.log('‚úÖ –¢–µ–ª–µ—Ñ–æ–Ω—ã –∑–∞—â–∏—â–µ–Ω—ã');
console.log('‚úÖ –ë–∏–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ —Å–∫—Ä—ã—Ç—ã');
console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –æ–±—ä–µ–∫—Ç—ã –±–µ–∑–æ–ø–∞—Å–Ω—ã');

console.log('\nüöÄ –ì–æ—Ç–æ–≤–æ –∫ production deployment!');
console.log('\n–î–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–æ–ª–Ω—ã—Ö Jest —Ç–µ—Å—Ç–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: npm run test:security');